name: CI â€“ Class Library

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build, Test, Sonar e Publish (ClassLibrary)
    uses: SampleProjectDotNet/reusable-workflows/.github/workflows/dotnet-build-test.yml@main
    with:
      solution-path: 'ClassLibrary/ClassLibrary.sln'
      project-folder: 'ClassLibrary'
      csproj: 'ClassLibrary/ClassLibrary.csproj'
      runs-on: 'windows-latest'
      runSonar: true
    secrets:
      SONAR_PROJECT_KEY:  ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
      SONAR_URL:           ${{ secrets.SONAR_URL }}
      SONAR_TOKEN:         ${{ secrets.SONAR_TOKEN }}



    publish-github:
      needs: build
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download NuGet package artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkg   
          path: ./nupkg

      - name: Baixar NuGet.exe
        run: |
          Invoke-WebRequest `
            -Uri https://dist.nuget.org/win-x86-commandline/latest/nuget.exe `
            -OutFile nuget.exe

      - name: Configurar GitHub Packages como fonte
        run: |
          ./nuget.exe sources add `
            -name "github" `
            -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" `
            -username "${{ github.actor }}" `
            -password "${{ secrets.GITHUB_TOKEN }}" `
            -StorePasswordInClearText
        shell: powershell

      - name: Publicar pacote no GitHub Packages
        run: |
          ./nuget.exe push "./nupkg/*.nupkg" `
            -Source "github" `
            -ApiKey "${{ secrets.GITHUB_TOKEN }}"
        shell: powershell

